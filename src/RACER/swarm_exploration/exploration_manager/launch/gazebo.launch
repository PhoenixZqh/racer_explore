<launch>
    <!-- 加载机器人描述 -->
    <param name="robot_description" command="$(find xacro)/xacro /root/jky/racer_explore/gazebo/racer.xacro" />

    <!-- 静态变换：support 到 support_depth -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="static_transform_publisher" args="0 0 0 -1.57 0 -1.57 support support_depth" />

    <!-- 静态变换：world 到 odom -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_odom" args="0 0 0 0 0 0 world odom" />

    <!-- 启动 RViz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d /root/jky/racer_explore/gazebo.rviz"/>

    <!-- 机器人状态发布 -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

    <!-- 关节状态发布 -->
    <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" />

    <!-- 启动 Gazebo 空世界 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="/root/jky/racer_explore/gazebo/world/map0.world" />
        <arg name="use_sim_time" value="true"/>
    </include>
    
    <!-- 生成机器人模型 -->
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model mycar -param robot_description" />

    <!-- 启动深度相机位姿发布节点 -->
    <node pkg="exploration_manager" type="sensor_pos" name="sensor_pos" output="screen"/>
    <node pkg="exploration_manager" type="racer2gazebo_cmd" name="racer2gazebo_cmd" output="screen"/>

</launch>