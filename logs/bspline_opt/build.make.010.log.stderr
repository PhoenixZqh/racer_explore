[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::optimize()[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:224:19:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kresult[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  224 |     nlopt::result [01;35m[Kresult[m[K = opt.optimize(q, final_cost);
      |                   [01;35m[K^~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:221:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  221 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcSmoothnessCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, const double&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&, double&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:258:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  258 |   for (int i = 0; [01;35m[Ki < q.size() - 3[m[K; i++) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcDistanceCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:287:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  287 |   for (int i = 0; [01;35m[Ki < q.size()[m[K; i++) {
      |                   [01;35m[K~~^~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcFeasibilityCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, const double&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&, double&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:314:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  314 |   for (int i = 0; [01;35m[Ki < q.size() - 1[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:332:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  332 |   for (int i = 0; [01;35m[Ki < q.size() - 2[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcEndCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, const double&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&, double&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:391:32:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  391 |   for (int i = q.size() - 3; [01;35m[Ki < q.size()[m[K; ++i) gradient_q[i] = zero;
      |                              [01;35m[K~~^~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcWaypointsCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:434:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  434 |   for (int i = 0; [01;35m[Ki < waypoints_.size()[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::BsplineOptimizer::calcViewCost(const std::vector<Eigen::Matrix<double, 3, 1> >&, double&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_ws/src/RACER/swarm_exploration/bspline_opt/src/bspline_optimizer.cpp:484:10:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Knorm_dn[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  484 |   double [01;35m[Knorm_dn[m[K = dn.norm();
      |          [01;35m[K^~~~~~~[m[K
