[35m[1mScanning dependencies of target active_perception[0m
[ 12%] [32mBuilding CXX object CMakeFiles/active_perception.dir/src/frontier_finder.cpp.o[0m
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::searchFrontiers()[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:128:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  128 |     for (int i = 0; [01;35m[Ki < mins.size()[m[K; ++i)
      |                     [01;35m[K~~^~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:141:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  141 |     for (int i = 0; [01;35m[Ki < mins.size()[m[K; ++i)
      |                     [01;35m[K~~^~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:148:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<int, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  148 |     for (int i = 0; [01;35m[Ki < min_ids.size()[m[K; ++i)
      |                     [01;35m[K~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::updateFrontierCostMatrix()[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:377:31:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  377 |             for (int i = 0; [01;35m[Ki < removed_ids_.size()[m[K; ++i)
      |                             [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool fast_planner::FrontierFinder::haveAnyOverlap(const Vector3d&, const Vector3d&, const std::vector<Eigen::Matrix<double, 3, 1> >&, const std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:477:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  477 |     for (int i = 0; [01;35m[Ki < mins.size()[m[K; ++i)
      |                     [01;35m[K~~^~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::getViewpointsInfo(const Vector3d&, const std::vector<int>&, const int&, const double&, std::vector<std::vector<Eigen::Matrix<double, 3, 1> > >&, std::vector<std::vector<double> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:615:36:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kconst int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  615 |                     if ([01;35m[Kpts.size() >= view_num[m[K || view.visib_num_ <= visib_thresh)
      |                         [01;35m[K~~~~~~~~~~~^~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:627:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kconst int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  627 |                         if ([01;35m[Kpts.size() >= view_num[m[K || view.visib_num_ <= visib_thresh)
      |                             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::getPathForTour(const Vector3d&, const std::vector<int>&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:681:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  681 |     for (int i = 0; [01;35m[Ki < frontier_ids.size() - 1[m[K; ++i)
      |                     [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kint fast_planner::FrontierFinder::addFrontiers(const std::vector<std::pair<Eigen::Matrix<double, 3, 1>, double> >&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:952:1:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
  952 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::findViewpoints(const Vector3d&, const Vector3d&, std::vector<fast_planner::Viewpoint>&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:959:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kleft_angle_[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  959 |     double [01;35m[Kleft_angle_[m[K, right_angle_, vertical_angle_, ray_length_;
      |            [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::sampleViewpoints(fast_planner::Frontier&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:1048:31:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1048 |             for (int i = 1; [01;35m[Ki < cells.size()[m[K; ++i)
      |                             [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[KEigen::Vector3i fast_planner::FrontierFinder::searchClearVoxel(const Vector3i&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:1204:17:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kadr[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1204 |             int [01;35m[Kadr[m[K = toadr(nbr);
      |                 [01;35m[K^~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid fast_planner::FrontierFinder::findViewpoints(const Vector3d&, const Vector3d&, std::vector<fast_planner::Viewpoint>&)[m[Kâ€™:
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:971:21:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvertical_angle_[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  971 |         for (double [01;35m[Kphi_v[m[K = -vertical_angle_; phi_v <= vertical_angle_; phi_v += vertical_angle_ / 3)
      |                     [01;35m[K^~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:975:46:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kray_length_[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  975 |             end[0] = sample[0] + [01;35m[Kray_length_ * cos(phi_v)[m[K * cos(hc + phi_h);
      |                                  [01;35m[K~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[K/home/zqh/phoenixZ/racer_explore/src/RACER/swarm_exploration/active_perception/src/frontier_finder.cpp:999:51:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kright_angle_[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  999 |         double yaw = [01;35m[Khc - M_PI_2 + M_PI / 9.0 * i + right_angle_[m[K;
      |                      [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[ 25%] [32m[1mLinking CXX shared library /home/zqh/phoenixZ/racer_explore/devel/.private/active_perception/lib/libactive_perception.so[0m
[100%] Built target active_perception
