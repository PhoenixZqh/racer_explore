[35m[1mScanning dependencies of target pcl_render_node[0m
[ 50%] [32mBuilding CXX object CMakeFiles/pcl_render_node.dir/src/pointcloud_render_node.cpp.o[0m
[01m[K/home/racer_ws/src/RACER/uav_simulator/local_sensing/src/pointcloud_render_node.cpp:[m[K In function â€˜[01m[Kvoid pointCloudCallBack(const PointCloud2&)[m[Kâ€™:
[01m[K/home/racer_ws/src/RACER/uav_simulator/local_sensing/src/pointcloud_render_node.cpp:108:35:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<pcl::PointXYZ, Eigen::aligned_allocator<pcl::PointXYZ> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  108 |   printf("global map has points: [01;35m[K%d[m[K.\n", [32m[KcloudIn.points.size()[m[K);
      |                                  [01;35m[K~^[m[K      [32m[K~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                   [01;35m[K|[m[K                         [32m[K|[m[K
      |                                   [01;35m[Kint[m[K                       [32m[Kstd::vector<pcl::PointXYZ, Eigen::aligned_allocator<pcl::PointXYZ> >::size_type {aka long unsigned int}[m[K
      |                                  [32m[K%ld[m[K
[100%] [32m[1mLinking CXX executable /home/racer_ws/devel/.private/local_sensing_node/lib/local_sensing_node/pcl_render_node[0m
[100%] Built target pcl_render_node
